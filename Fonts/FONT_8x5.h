/*
 * FONT_8x5
 *
 * File Name			: FONT_8x5.h
 * Date					: 26 March 2023
 * Originally By		: Chandrakant Agrawal
 * Font size in bytes	: 470
 * Font width			: 5
 * Font height			: 8
 * Font first char		: 32
 * Font first index		: 0
 * Font last char		: 127
 * Font last index		: 94
 * Font used chars		: 95
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *		uint16_t	font_Size_in_Bytes_over_all_included_Size_it_self;
 *		uint8_t		font_Width_in_Pixel_for_fixed_drawing;
 *		uint8_t		font_Height_in_Pixel_for_all_characters;
 *		unit8_t		font_First_Char;
 *		uint8_t		font_Char_Count;
 *
 *		uint8_t		font_Char_Widths[font_Last_Char - font_First_Char +1];
 *					// for each character the separate width in pixels,
 *					// characters < 128 have an implicit virtual right empty row
 *
 *		uint8_t		font_data[];
 *					// bit field of all characters
 */

#pragma once

#include <avr/io.h>
#include <avr/pgmspace.h>

#define FONT_WIDTH 5
#define FONT_HIGHT 8
#define FONT_START 32

static const uint8_t PROGMEM FONT_8X5[95][FONT_WIDTH] = {

																// Index  | Charator  | Decimal
{0x00, 0x00, 0x00, 0x00, 0x00}, // 0		 space	32
{0x00, 0x00, 0x5F, 0x00, 0x00}, // 1		 !			33
{0x00, 0x07, 0x00, 0x07, 0x00}, // 2		 "			34
{0x14, 0x7F, 0x14, 0x7F, 0x14}, // 3		 #			35
{0x24, 0x2A, 0x7F, 0x2A, 0x12}, // 4		 $			36
{0x23, 0x13, 0x08, 0x64, 0x62}, // 5		 %			37
{0x36, 0x49, 0x55, 0x22, 0x50}, // 6		 &			38
{0x00, 0x05, 0x03, 0x00, 0x00}, // 7		 '			39
{0x00, 0x1C, 0x22, 0x41, 0x00}, // 8		 (			40
{0x00, 0x41, 0x22, 0x1C, 0x00}, // 9		 )			41
{0x08, 0x2A, 0x1C, 0x2A, 0x08}, // 10		 *			42
{0x08, 0x08, 0x3E, 0x08, 0x08}, // 11		 +			43
{0x00, 0x50, 0x30, 0x00, 0x00}, // 12		 ,			44
{0x08, 0x08, 0x08, 0x08, 0x08}, // 13		 -			45
{0x00, 0x60, 0x60, 0x00, 0x00}, // 14		 .			46
{0x20, 0x10, 0x08, 0x04, 0x02}, // 15		 /			47
{0x3E, 0x51, 0x49, 0x45, 0x3E}, // 16		 0			48
{0x00, 0x42, 0x7F, 0x40, 0x00}, // 17		 1			49
{0x42, 0x61, 0x51, 0x49, 0x46}, // 18		 2			50
{0x21, 0x41, 0x45, 0x4B, 0x31}, // 19		 3			51
{0x18, 0x14, 0x12, 0x7F, 0x10}, // 20		 4			52
{0x27, 0x45, 0x45, 0x45, 0x39}, // 21		 5			53
{0x3C, 0x4A, 0x49, 0x49, 0x30}, // 22		 6			54
{0x01, 0x71, 0x09, 0x05, 0x03}, // 23		 7			55
{0x36, 0x49, 0x49, 0x49, 0x36}, // 24		 8			56
{0x06, 0x49, 0x49, 0x29, 0x1E}, // 25		 9			57
{0x00, 0x36, 0x36, 0x00, 0x00}, // 26		 :			58
{0x00, 0x56, 0x36, 0x00, 0x00}, // 27		 ;			59
{0x00, 0x08, 0x14, 0x22, 0x41}, // 28		 <			60
{0x14, 0x14, 0x14, 0x14, 0x14}, // 29		 =			61
{0x41, 0x22, 0x14, 0x08, 0x00}, // 30		 >			62
{0x02, 0x01, 0x51, 0x09, 0x06}, // 31		 ?			63
{0x3E, 0x01, 0x39, 0x45, 0x3E}, // 32		 @			64
{0x7E, 0x11, 0x11, 0x11, 0x7E}, // 33		 A			65
{0x7F, 0x49, 0x49, 0x49, 0x36}, // 34		 B			66
{0x3E, 0x41, 0x41, 0x41, 0x22}, // 35		 C			67
{0x7F, 0x41, 0x41, 0x22, 0x1C}, // 36		 D			68
{0x7F, 0x49, 0x49, 0x49, 0x41}, // 37		 E			69
{0x7F, 0x09, 0x09, 0x01, 0x01}, // 38		 F			70
{0x3E, 0x41, 0x41, 0x51, 0x32}, // 39		 G			71
{0x7F, 0x08, 0x08, 0x08, 0x7F}, // 40		 H			72
{0x00, 0x41, 0x7F, 0x41, 0x00}, // 41		 I			73
{0x20, 0x40, 0x41, 0x3F, 0x01}, // 42		 J			74
{0x7F, 0x08, 0x14, 0x22, 0x41}, // 43		 K			75
{0x7F, 0x40, 0x40, 0x40, 0x40}, // 44		 L			76
{0x7F, 0x02, 0x04, 0x02, 0x7F}, // 45		 M			77
{0x7F, 0x04, 0x08, 0x10, 0x7F}, // 46		 N			78
{0x3E, 0x41, 0x41, 0x41, 0x3E}, // 47		 O			79
{0x7F, 0x09, 0x09, 0x09, 0x06}, // 48		 P			80
{0x3E, 0x41, 0x51, 0x21, 0x5E}, // 49		 Q			81
{0x7F, 0x09, 0x19, 0x29, 0x46}, // 50		 R			82
{0x46, 0x49, 0x49, 0x49, 0x31}, // 51		 S			83
{0x01, 0x01, 0x7F, 0x01, 0x01}, // 52		 T			84
{0x3F, 0x40, 0x40, 0x40, 0x3F}, // 53		 U			85
{0x1F, 0x20, 0x40, 0x20, 0x1F}, // 54		 V			86
{0x7F, 0x20, 0x18, 0x20, 0x7F}, // 55		 W			87
{0x63, 0x14, 0x08, 0x14, 0x63}, // 56		 X			88
{0x03, 0x04, 0x78, 0x04, 0x03}, // 57		 Y			89
{0x61, 0x51, 0x49, 0x45, 0x43}, // 58		 Z			90
{0x00, 0x00, 0x7F, 0x41, 0x41}, // 59		 [			91
{0x02, 0x04, 0x08, 0x10, 0x20}, // 60		 \			92
{0x41, 0x41, 0x7F, 0x00, 0x00}, // 61		 ]			93
{0x04, 0x02, 0x01, 0x02, 0x04}, // 62		 ^			94
{0x40, 0x40, 0x40, 0x40, 0x40}, // 63		 _			95
{0x00, 0x01, 0x02, 0x04, 0x00}, // 64		 `			96
{0x20, 0x54, 0x54, 0x54, 0x78}, // 65		 a			97
{0x7F, 0x48, 0x44, 0x44, 0x38}, // 66		 b			98
{0x38, 0x44, 0x44, 0x44, 0x00}, // 67		 c			99
{0x38, 0x44, 0x44, 0x48, 0x7F}, // 68		 d			100
{0x38, 0x54, 0x54, 0x54, 0x18}, // 69		 e			101
{0x08, 0x7E, 0x09, 0x01, 0x02}, // 70		 f			102
{0x08, 0x54, 0x54, 0x54, 0x3C}, // 71		 g			103
{0x7F, 0x08, 0x04, 0x04, 0x78}, // 72		 h			104
{0x00, 0x44, 0x7D, 0x40, 0x00}, // 73		 i			105
{0x20, 0x40, 0x44, 0x3D, 0x00}, // 74		 j			106
{0x00, 0x7F, 0x10, 0x28, 0x44}, // 75		 k			107
{0x00, 0x41, 0x7F, 0x40, 0x00}, // 76		 l			108
{0x7C, 0x04, 0x18, 0x04, 0x78}, // 77		 m			109
{0x7C, 0x08, 0x04, 0x04, 0x78}, // 78		 n			110
{0x38, 0x44, 0x44, 0x44, 0x38}, // 79		 o			111
{0x7C, 0x14, 0x14, 0x14, 0x08}, // 80		 p			112
{0x08, 0x14, 0x14, 0x14, 0x7C}, // 81		 q			113
{0x7C, 0x08, 0x04, 0x04, 0x08}, // 82		 r			114
{0x48, 0x54, 0x54, 0x54, 0x24}, // 83		 s			115
{0x04, 0x3F, 0x44, 0x40, 0x20}, // 84		 t			116
{0x3C, 0x40, 0x40, 0x20, 0x7C}, // 85		 u			117
{0x1C, 0x20, 0x40, 0x20, 0x1C}, // 86		 v			118
{0x3C, 0x40, 0x30, 0x40, 0x3C}, // 87		 w			119
{0x44, 0x28, 0x10, 0x28, 0x44}, // 88		 x			120
{0x0C, 0x50, 0x50, 0x50, 0x3C}, // 89		 y			121
{0x44, 0x64, 0x54, 0x4C, 0x44}, // 90		 z			122
{0x00, 0x08, 0x36, 0x41, 0x00}, // 91		 {			123
{0x00, 0x00, 0x7F, 0x00, 0x00}, // 92		 |			124
{0x00, 0x41, 0x36, 0x08, 0x00}, // 93		 }			125
{0x0C, 0x10, 0x08, 0x04, 0x18}	// 94		 ~			126
};
